/*
   Generated by EX4-TO-MQ4 decompiler V4.0.438.3 [-]
   Website: https://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "www.u-f-i.biz"
#property link      "ufi"

#property indicator_separate_window
#property indicator_minimum -1.0
#property indicator_maximum 1.0
#property indicator_buffers 2
#property indicator_color1 DarkGreen
#property indicator_color2 Crimson

extern string TimeFrame = "Current Time Frame";
extern double ufi_Period = 34.0;
extern bool ShowArrows = TRUE;
string gs_96 = "ufi_arrows";
extern color ArrowsUp = DarkGreen;
extern color ArrowsDn = Crimson;
extern bool AlertOn = TRUE;
bool gi_116 = FALSE;
bool gi_120 = TRUE;
bool gi_124 = FALSE;
bool gi_128 = FALSE;
double g_ibuf_132[];
double g_ibuf_136[];
double g_ibuf_140[];
double g_ibuf_144[];
double g_ibuf_148[];
string gs_152;
bool g_bool_160;
bool g_bool_164;
int g_timeframe_168;
string gs_nothing_172 = "nothing";
datetime g_time_180;
string gsa_184[] = {"M1", "M5", "M15", "M30", "H1", "H4", "D1", "W1", "MN"};
int gia_188[] = {1, 5, 15, 30, 60, 240, 1440, 10080, 43200};

int init() {
   IndicatorBuffers(5);
   SetIndexBuffer(0, g_ibuf_144);
   SetIndexStyle(0, DRAW_HISTOGRAM);
   SetIndexBuffer(1, g_ibuf_140);
   SetIndexStyle(1, DRAW_HISTOGRAM);
   SetIndexBuffer(2, g_ibuf_132);
   SetIndexBuffer(3, g_ibuf_136);
   SetIndexBuffer(4, g_ibuf_148);
   gs_152 = WindowExpertName();
   g_bool_160 = TimeFrame == "CalculateValue";
   if (g_bool_160) return (0);
   g_bool_164 = TimeFrame == "returnBars";
   if (g_bool_164) return (0);
   g_timeframe_168 = f0_7(TimeFrame);
   IndicatorShortName("Ind_1_v1.04");
   return (0);
}

int deinit() {
   if ((!g_bool_160) && ShowArrows) f0_6();
   return (0);
}

int start() {
   double ld_12;
   double ld_20;
   int shift_28;
   //if (AccountNumber() != 119061) return (0);
   int li_0 = IndicatorCounted();
   if (li_0 < 0) return (-1);
   if (li_0 > 0) li_0--;
   int li_8 = MathMin(Bars - li_0, Bars - 1);
   if (g_bool_164) {
      g_ibuf_144[0] = li_8 + 1;
      return (0);
   }
   if (g_bool_160 || g_timeframe_168 == Period()) {
      ld_12 = 1;
      if (Digits == 3 || Digits == 5) ld_12 = 10;
      for (int li_4 = li_8; li_4 >= 1; li_4--) {
         if (li_4 >= Bars - 2) {
            g_ibuf_132[li_4 + 1] = Close[li_4];
            g_ibuf_136[li_4 + 1] = Close[li_4];
         } else {
            ld_20 = Close[li_4];
            g_ibuf_132[li_4] = g_ibuf_132[li_4 + 1];
            g_ibuf_136[li_4] = g_ibuf_136[li_4 + 1];
            g_ibuf_140[li_4] = g_ibuf_140[li_4 + 1];
            g_ibuf_144[li_4] = g_ibuf_144[li_4 + 1];
            g_ibuf_148[li_4] = g_ibuf_148[li_4 + 1];
            if (ld_20 > g_ibuf_132[li_4] + ufi_Period * ld_12 * Point) {
               g_ibuf_132[li_4] = ld_20;
               g_ibuf_136[li_4] = ld_20 - ufi_Period * ld_12 * Point;
               g_ibuf_144[li_4] += 1.0;
               g_ibuf_140[li_4] = 0;
            }
            if (ld_20 < g_ibuf_136[li_4] - ufi_Period * ld_12 * Point) {
               g_ibuf_136[li_4] = ld_20;
               g_ibuf_132[li_4] = ld_20 + ufi_Period * ld_12 * Point;
               g_ibuf_140[li_4] = g_ibuf_140[li_4] - 1.0;
               g_ibuf_144[li_4] = 0;
            }
            if (g_ibuf_144[li_4] > 0.0) g_ibuf_148[li_4] = 1;
            if (g_ibuf_140[li_4] < 0.0) g_ibuf_148[li_4] = -1;
            f0_3(li_4);
         }
      }
      f0_2();
      return (0);
   }
   li_8 = MathMax(li_8, MathMin(Bars, iCustom(NULL, g_timeframe_168, gs_152, "returnBars", 0, 0) * g_timeframe_168 / Period()));
   for (li_4 = li_8; li_4 >= 0; li_4--) {
      shift_28 = iBarShift(NULL, g_timeframe_168, Time[li_4]);
      g_ibuf_144[li_4] = iCustom(NULL, g_timeframe_168, gs_152, "CalculateValue", ufi_Period, 0, shift_28);
      g_ibuf_140[li_4] = iCustom(NULL, g_timeframe_168, gs_152, "CalculateValue", ufi_Period, 1, shift_28);
      g_ibuf_148[li_4] = iCustom(NULL, g_timeframe_168, gs_152, "CalculateValue", ufi_Period, 4, shift_28);
      f0_3(li_4);
   }
   f0_2();
   return (0);
}

void f0_2() {
   int li_0;
   if ((!g_bool_160) && AlertOn) {
      if (gi_116) li_0 = 0;
      else li_0 = 1;
      li_0 = iBarShift(NULL, 0, iTime(NULL, g_timeframe_168, li_0));
      if (g_ibuf_148[li_0] != g_ibuf_148[li_0 + 1]) {
         if (g_ibuf_148[li_0] == 1.0) f0_8(li_0, "( BUY )");
         if (g_ibuf_148[li_0] == -1.0) f0_8(li_0, "( SELL )");
      }
   }
}

void f0_8(int ai_0, string as_4) {
   string str_concat_12;
   if (gs_nothing_172 != as_4 || g_time_180 != Time[ai_0]) {
      gs_nothing_172 = as_4;
      g_time_180 = Time[ai_0];
      str_concat_12 = StringConcatenate("Ind_1_v1.04   ", Symbol(), " ", f0_1(g_timeframe_168), " ", as_4, " at ", TimeToStr(TimeLocal(), TIME_DATE), " ", TimeToStr(TimeLocal(),
         TIME_SECONDS));
      if (gi_120) Alert(str_concat_12);
      if (gi_128) SendMail(StringConcatenate(Symbol(), "Ind_1_v1.04 "), str_concat_12);
      if (gi_124) PlaySound("alert2.wav");
   }
}

void f0_3(int ai_0) {
   if ((!g_bool_160) && ShowArrows) {
      f0_4(Time[ai_0]);
      if (g_ibuf_148[ai_0] != g_ibuf_148[ai_0 + 1]) {
         if (g_ibuf_148[ai_0] == 1.0) f0_5(ai_0, ArrowsUp, 217, 0);
         if (g_ibuf_148[ai_0] == -1.0) f0_5(ai_0, ArrowsDn, 218, 1);
      }
   }
}

void f0_5(int ai_0, color a_color_4, int ai_8, bool ai_12) {
   string name_16 = gs_96 + ":" + Time[ai_0];
   double ld_24 = 3.0 * iATR(NULL, 0, 20, ai_0) / 4.0;
   ObjectCreate(name_16, OBJ_ARROW, 0, Time[ai_0], 0);
   ObjectSet(name_16, OBJPROP_ARROWCODE, ai_8);
   ObjectSet(name_16, OBJPROP_COLOR, a_color_4);
   if (ai_12) {
      ObjectSet(name_16, OBJPROP_PRICE1, High[ai_0] + ld_24);
      return;
   }
   ObjectSet(name_16, OBJPROP_PRICE1, Low[ai_0] - ld_24);
}

void f0_6() {
   string name_16;
   string ls_0 = gs_96 + ":";
   int str_len_8 = StringLen(ls_0);
   for (int li_12 = ObjectsTotal() - 1; li_12 >= 0; li_12--) {
      name_16 = ObjectName(li_12);
      if (StringSubstr(name_16, 0, str_len_8) == ls_0) ObjectDelete(name_16);
   }
}

void f0_4(int ai_0) {
   string name_4 = gs_96 + ":" + ai_0;
   ObjectDelete(name_4);
}

int f0_7(string as_0) {
   as_0 = f0_0(as_0);
   for (int li_8 = ArraySize(gia_188) - 1; li_8 >= 0; li_8--)
      if (as_0 == gsa_184[li_8] || as_0 == "" + gia_188[li_8]) return (MathMax(gia_188[li_8], Period()));
   return (Period());
}

string f0_1(int ai_0) {
   for (int li_4 = ArraySize(gia_188) - 1; li_4 >= 0; li_4--)
      if (ai_0 == gia_188[li_4]) return (gsa_184[li_4]);
   return ("");
}

string f0_0(string as_0) {
   int li_20;
   string ls_ret_8 = as_0;
   for (int li_16 = StringLen(as_0) - 1; li_16 >= 0; li_16--) {
      li_20 = StringGetChar(ls_ret_8, li_16);
      if ((li_20 > '`' && li_20 < '{') || (li_20 > 'ß' && li_20 < 256)) ls_ret_8 = StringSetChar(ls_ret_8, li_16, li_20 - 32);
      else
         if (li_20 > -33 && li_20 < 0) ls_ret_8 = StringSetChar(ls_ret_8, li_16, li_20 + 224);
   }
   return (ls_ret_8);
}